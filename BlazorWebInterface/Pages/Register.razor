@page "/register"
@inject NavigationManager NavigationManager

<h3>Регистрация</h3>
<EditForm Model="@registerUserRequest" OnValidSubmit="@HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Имя пользователя:</label>
        <InputText @bind-Value="registerUserRequest.UserName" />
    </div>
    <div>
        <label>Email:</label>
        <InputText @bind-Value="registerUserRequest.Email" />
    </div>
    <div>
        <label>Пароль:</label>
        <InputText @bind-Value="registerUserRequest.Password" type="password" />
    </div>
    <div>
        <label>Аватар:</label>
        <InputText @bind-Value="registerUserRequest.Avatar" />
    </div>
    <button type="submit">Зарегистрироваться</button>
</EditForm>

@code {
    private RegisterUserRequest registerUserRequest = new RegisterUserRequest();

    private async Task HandleRegister()
    {
        // Логика регистрации с использованием registerUserRequest
        bool isRegistered = await RegisterUser(registerUserRequest);
        if (isRegistered)
        {
            NavigationManager.NavigateTo("/home"); // Перенаправление на главную страницу
        }
    }

    private Task<bool> RegisterUser(RegisterUserRequest request)
    {
        // Реализация логики регистрации
        return Task.FromResult(true); // Для примера
    }
}